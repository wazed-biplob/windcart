{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/roboto_91aa8e08.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"roboto_91aa8e08-module__8yyMMG__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/roboto_91aa8e08.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Roboto%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22weight%22:[%22400%22,%22700%22],%22style%22:[%22normal%22,%22italic%22],%22display%22:%22swap%22,%22preload%22:true}],%22variableName%22:%22roboto%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Roboto', 'Roboto Fallback'\",\n        \n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,sJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;IAEhB;AACJ;AAEA,IAAI,sJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,sJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///media/wazed/Others/wazed/winddb.com/client/app/api/authApi.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { IUser } from \"../interface/types\";\n\nconst API_URL = \"http://localhost:5000/api/v1/auth\";\n\nexport const authApi = createApi({\n  reducerPath: \"authApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: API_URL }),\n  endpoints: (builder) => ({\n    createUser: builder.mutation({\n      query: (userData: IUser) => ({\n        url: \"/create-user\",\n        method: \"POST\",\n        body: userData,\n      }),\n    }),\n  }),\n});\nexport const { useCreateUserMutation } = authApi;\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGA,MAAM,UAAU;AAET,MAAM,UAAU,CAAA,GAAA,yZAAA,CAAA,YAAS,AAAD,EAAE;IAC/B,aAAa;IACb,WAAW,CAAA,GAAA,uXAAA,CAAA,iBAAc,AAAD,EAAE;QAAE,SAAS;IAAQ;IAC7C,WAAW,CAAC,UAAY,CAAC;YACvB,YAAY,QAAQ,QAAQ,CAAC;gBAC3B,OAAO,CAAC,WAAoB,CAAC;wBAC3B,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACR,CAAC;YACH;QACF,CAAC;AACH;AACO,MAAM,EAAE,qBAAqB,EAAE,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///media/wazed/Others/wazed/winddb.com/client/app/api/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { authApi } from \"./authApi\";\n\nexport const store = configureStore({\n  reducer: {\n    [authApi.reducerPath]: authApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(authApi.middleware),\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,QAAQ,CAAA,GAAA,kYAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,CAAC,qHAAA,CAAA,UAAO,CAAC,WAAW,CAAC,EAAE,qHAAA,CAAA,UAAO,CAAC,OAAO;IACxC;IACA,YAAY,CAAC,uBACX,uBAAuB,MAAM,CAAC,qHAAA,CAAA,UAAO,CAAC,UAAU;AACpD","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///media/wazed/Others/wazed/winddb.com/client/app/layout.tsx"],"sourcesContent":["\"use client\";\n// import type { Metadata } from \"next\";\nimport \"./globals.css\";\nimport { Roboto } from \"next/font/google\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./api/store\";\n\nconst roboto = Roboto({\n  subsets: [\"latin\"],\n  weight: [\"400\", \"700\"],\n  style: [\"normal\", \"italic\"],\n  display: \"swap\",\n  preload: true,\n});\n// export const metadata: Metadata = {\n//   title: \"WindCode\",\n//   description: \"LLM Platform\",\n// };\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" className={roboto.className}>\n      <body>\n        <Provider store={store}>{children}</Provider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;AAIA;AACA;AALA;;;;;;AAmBe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,6WAAC;QAAK,MAAK;QAAK,WAAW,0IAAA,CAAA,UAAM,CAAC,SAAS;kBACzC,cAAA,6WAAC;sBACC,cAAA,6WAAC,kSAAA,CAAA,WAAQ;gBAAC,OAAO,mHAAA,CAAA,QAAK;0BAAG;;;;;;;;;;;;;;;;AAIjC","debugId":null}}]
}